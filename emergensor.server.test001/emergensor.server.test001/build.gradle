apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

project.group = 'emergensor'
project.archivesBaseName = 'emergensor.server.test001'
version = '0.0.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle Quickstart'
		attributes 'Implementation-Version': version
		attributes 'Main-Class': 'emergensor.server.test002.Main'
	}
}

task sourcesJar(type: Jar, dependsOn:classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

javadoc {
	options.charSet = 'UTF-8'
	options.encoding = 'UTF-8'
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

repositories {

	mavenCentral()

	//maven {
	//	url '../maven'
	//}

	maven {
		url 'https://raw.githubusercontent.com/MirrgieRiana/mirrg.lithium/master/maven'
	}

}

dependencies {
	//compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	//compile group: 'mirrg.lithium', name: 'mirrg.lithium.properties', version: '4.0.0'

	//compile group: 'nz.ac.waikato.cms.weka', name: 'weka-dev', version: '3.9.1'
	//compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.10'

	compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.+'
	compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.+'
	compile group: 'net.arnx', name: 'jsonic', version: '1.3.10'

	compile group: 'mirrg.lithium', name: 'mirrg.lithium.struct', version: '2.1+'
	compile group: 'mirrg.lithium', name: 'mirrg.lithium.lang', version: '1.0+'
	compile group: 'mirrg.lithium', name: 'mirrg.lithium.cgi', version: '3.0+'
	compile group: 'mirrg.lithium', name: 'mirrg.lithium.event', version: '2.0+'
}

uploadArchives {
	repositories {

		flatDir {
			dirs 'repos'
		}

		//mavenDeployer {
		//	pom.artifactId = project.archivesBaseName
		//	repository(url: 'file://localhost/' + file('../maven').getAbsolutePath())
		//}

	}
}

jar {
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}
